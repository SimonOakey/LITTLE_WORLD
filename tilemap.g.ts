// Auto-generated code. Do not edit.
namespace myTiles {
    //% fixedInstance jres blockIdentity=images._tile
    export const transparency16 = image.ofBuffer(hex``);
    //% fixedInstance jres blockIdentity=images._tile
    export const tile1 = image.ofBuffer(hex``);

    helpers.registerTilemapFactory(function(name: string) {
        switch(helpers.stringTrim(name)) {
            case "level": return tiles.createTilemap(hex``, img`
...2222......222................
..22...........222..............
.22..............2..............
22...............2.....22222....
2................2..2222...2....
2................2222.2....22...
2.................22........2...
2...........................2...
2...........................2...
2...........................2...
2...................22......2...
2..................2222.....2...
2.................22..2....2....
22...............22...222222....
.22.............2...............
..22............2...............
`, [myTiles.transparency16,sprites.castle.tileGrass1,sprites.castle.tilePath5,sprites.dungeon.darkGroundCenter,sprites.dungeon.darkGroundNorthWest1,sprites.castle.tileGrass2,sprites.builtin.forestTiles0], TileScale.Sixteen)
            case "level_0": return tiles.createTilemap(hex`0800080009040504050504080b010101010101060b010101010101060b010101010103060b010101010201060b010201020102060b010201020101060a0c0c0c0c0c0c07`, img`
2 2 2 2 2 2 2 2 
2 . . . . . . 2 
2 . . . . . . 2 
2 . . . . . . 2 
2 . . . . . . 2 
2 . . . . . . 2 
2 . . . . . . 2 
2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorDark2,sprites.dungeon.floorDark5,sprites.dungeon.stairWest,sprites.dungeon.purpleOuterSouth0,sprites.dungeon.purpleOuterSouth1,sprites.dungeon.purpleOuterWest1,sprites.dungeon.purpleInnerSouthEast,sprites.dungeon.purpleInnerNorthEast,sprites.dungeon.purpleInnerNorthWest,sprites.dungeon.purpleInnerSouthWest,sprites.dungeon.purpleOuterEast0,sprites.dungeon.purpleOuterNorth1], TileScale.Sixteen)
            case "level_1": return tiles.createTilemap(hex`100008000303030303030303030303030303030301010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010102020202020202020202020202020202`, img`
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
. . . . . . . . . . . . . . . . 
2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 
`, [myTiles.transparency16,sprites.dungeon.floorLight0,sprites.dungeon.greenOuterNorth1,sprites.dungeon.greenOuterSouth0], TileScale.Sixteen)
        }
        return null;
    })

}
// Auto-generated code. Do not edit.
